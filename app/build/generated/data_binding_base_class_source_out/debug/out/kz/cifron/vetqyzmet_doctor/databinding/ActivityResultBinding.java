// Generated by view binder compiler. Do not edit!
package kz.cifron.vetqyzmet_doctor.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import kz.cifron.vetqyzmet_doctor.R;

public final class ActivityResultBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout TopFont;

  @NonNull
  public final ConstraintLayout addAnimals;

  @NonNull
  public final ImageView arrowIcon;

  @NonNull
  public final ImageView beautifulR;

  @NonNull
  public final TextView birthMonth;

  @NonNull
  public final ConstraintLayout bottomAddAnimals;

  @NonNull
  public final TextView breedText;

  @NonNull
  public final TextView chageText;

  @NonNull
  public final TextView checkoutBack;

  @NonNull
  public final TextView color;

  @NonNull
  public final TextView completeResult;

  @NonNull
  public final ImageView deleteAndResetImage;

  @NonNull
  public final TextView emailEt1Result;

  @NonNull
  public final TextView genderAnimalResult;

  @NonNull
  public final TextView genderText;

  @NonNull
  public final ConstraintLayout imageResultSave;

  @NonNull
  public final View rectangleFurther;

  @NonNull
  public final View rectangleGray;

  @NonNull
  public final TextView saveBirthMonthResult;

  @NonNull
  public final TextView saveBreedResult;

  @NonNull
  public final TextView saveColorResult;

  @NonNull
  public final TextView saveTypeResult;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView typeInj;

  private ActivityResultBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout TopFont, @NonNull ConstraintLayout addAnimals,
      @NonNull ImageView arrowIcon, @NonNull ImageView beautifulR, @NonNull TextView birthMonth,
      @NonNull ConstraintLayout bottomAddAnimals, @NonNull TextView breedText,
      @NonNull TextView chageText, @NonNull TextView checkoutBack, @NonNull TextView color,
      @NonNull TextView completeResult, @NonNull ImageView deleteAndResetImage,
      @NonNull TextView emailEt1Result, @NonNull TextView genderAnimalResult,
      @NonNull TextView genderText, @NonNull ConstraintLayout imageResultSave,
      @NonNull View rectangleFurther, @NonNull View rectangleGray,
      @NonNull TextView saveBirthMonthResult, @NonNull TextView saveBreedResult,
      @NonNull TextView saveColorResult, @NonNull TextView saveTypeResult,
      @NonNull TextView textView, @NonNull TextView typeInj) {
    this.rootView = rootView;
    this.TopFont = TopFont;
    this.addAnimals = addAnimals;
    this.arrowIcon = arrowIcon;
    this.beautifulR = beautifulR;
    this.birthMonth = birthMonth;
    this.bottomAddAnimals = bottomAddAnimals;
    this.breedText = breedText;
    this.chageText = chageText;
    this.checkoutBack = checkoutBack;
    this.color = color;
    this.completeResult = completeResult;
    this.deleteAndResetImage = deleteAndResetImage;
    this.emailEt1Result = emailEt1Result;
    this.genderAnimalResult = genderAnimalResult;
    this.genderText = genderText;
    this.imageResultSave = imageResultSave;
    this.rectangleFurther = rectangleFurther;
    this.rectangleGray = rectangleGray;
    this.saveBirthMonthResult = saveBirthMonthResult;
    this.saveBreedResult = saveBreedResult;
    this.saveColorResult = saveColorResult;
    this.saveTypeResult = saveTypeResult;
    this.textView = textView;
    this.typeInj = typeInj;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityResultBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityResultBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_result, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityResultBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.TopFont;
      ConstraintLayout TopFont = ViewBindings.findChildViewById(rootView, id);
      if (TopFont == null) {
        break missingId;
      }

      id = R.id.addAnimals;
      ConstraintLayout addAnimals = ViewBindings.findChildViewById(rootView, id);
      if (addAnimals == null) {
        break missingId;
      }

      id = R.id.arrow_icon;
      ImageView arrowIcon = ViewBindings.findChildViewById(rootView, id);
      if (arrowIcon == null) {
        break missingId;
      }

      id = R.id.beautiful_r;
      ImageView beautifulR = ViewBindings.findChildViewById(rootView, id);
      if (beautifulR == null) {
        break missingId;
      }

      id = R.id.birthMonth;
      TextView birthMonth = ViewBindings.findChildViewById(rootView, id);
      if (birthMonth == null) {
        break missingId;
      }

      id = R.id.bottomAddAnimals;
      ConstraintLayout bottomAddAnimals = ViewBindings.findChildViewById(rootView, id);
      if (bottomAddAnimals == null) {
        break missingId;
      }

      id = R.id.breedText;
      TextView breedText = ViewBindings.findChildViewById(rootView, id);
      if (breedText == null) {
        break missingId;
      }

      id = R.id.chageText;
      TextView chageText = ViewBindings.findChildViewById(rootView, id);
      if (chageText == null) {
        break missingId;
      }

      id = R.id.checkoutBack;
      TextView checkoutBack = ViewBindings.findChildViewById(rootView, id);
      if (checkoutBack == null) {
        break missingId;
      }

      id = R.id.color;
      TextView color = ViewBindings.findChildViewById(rootView, id);
      if (color == null) {
        break missingId;
      }

      id = R.id.completeResult;
      TextView completeResult = ViewBindings.findChildViewById(rootView, id);
      if (completeResult == null) {
        break missingId;
      }

      id = R.id.deleteAndResetImage;
      ImageView deleteAndResetImage = ViewBindings.findChildViewById(rootView, id);
      if (deleteAndResetImage == null) {
        break missingId;
      }

      id = R.id.emailEt1Result;
      TextView emailEt1Result = ViewBindings.findChildViewById(rootView, id);
      if (emailEt1Result == null) {
        break missingId;
      }

      id = R.id.genderAnimalResult;
      TextView genderAnimalResult = ViewBindings.findChildViewById(rootView, id);
      if (genderAnimalResult == null) {
        break missingId;
      }

      id = R.id.genderText;
      TextView genderText = ViewBindings.findChildViewById(rootView, id);
      if (genderText == null) {
        break missingId;
      }

      id = R.id.imageResultSave;
      ConstraintLayout imageResultSave = ViewBindings.findChildViewById(rootView, id);
      if (imageResultSave == null) {
        break missingId;
      }

      id = R.id.rectangleFurther;
      View rectangleFurther = ViewBindings.findChildViewById(rootView, id);
      if (rectangleFurther == null) {
        break missingId;
      }

      id = R.id.rectangleGray;
      View rectangleGray = ViewBindings.findChildViewById(rootView, id);
      if (rectangleGray == null) {
        break missingId;
      }

      id = R.id.saveBirthMonthResult;
      TextView saveBirthMonthResult = ViewBindings.findChildViewById(rootView, id);
      if (saveBirthMonthResult == null) {
        break missingId;
      }

      id = R.id.saveBreedResult;
      TextView saveBreedResult = ViewBindings.findChildViewById(rootView, id);
      if (saveBreedResult == null) {
        break missingId;
      }

      id = R.id.saveColorResult;
      TextView saveColorResult = ViewBindings.findChildViewById(rootView, id);
      if (saveColorResult == null) {
        break missingId;
      }

      id = R.id.saveTypeResult;
      TextView saveTypeResult = ViewBindings.findChildViewById(rootView, id);
      if (saveTypeResult == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.typeInj;
      TextView typeInj = ViewBindings.findChildViewById(rootView, id);
      if (typeInj == null) {
        break missingId;
      }

      return new ActivityResultBinding((ConstraintLayout) rootView, TopFont, addAnimals, arrowIcon,
          beautifulR, birthMonth, bottomAddAnimals, breedText, chageText, checkoutBack, color,
          completeResult, deleteAndResetImage, emailEt1Result, genderAnimalResult, genderText,
          imageResultSave, rectangleFurther, rectangleGray, saveBirthMonthResult, saveBreedResult,
          saveColorResult, saveTypeResult, textView, typeInj);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
