// Generated by view binder compiler. Do not edit!
package kz.cifron.vetqyzmet_doctor.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.DatePicker;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import kz.cifron.vetqyzmet_doctor.R;

public final class ActivityCustomDatePickerDialogBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout DialogCancelButton;

  @NonNull
  public final DatePicker DialogDatePicker;

  @NonNull
  public final ConstraintLayout DialogOkButton;

  @NonNull
  public final ConstraintLayout bottomAddAnimals;

  @NonNull
  public final TextView checkoutBack;

  @NonNull
  public final TextView checkoutGO;

  @NonNull
  public final View rectangleFurther;

  @NonNull
  public final View rectangleGray;

  private ActivityCustomDatePickerDialogBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout DialogCancelButton, @NonNull DatePicker DialogDatePicker,
      @NonNull ConstraintLayout DialogOkButton, @NonNull ConstraintLayout bottomAddAnimals,
      @NonNull TextView checkoutBack, @NonNull TextView checkoutGO, @NonNull View rectangleFurther,
      @NonNull View rectangleGray) {
    this.rootView = rootView;
    this.DialogCancelButton = DialogCancelButton;
    this.DialogDatePicker = DialogDatePicker;
    this.DialogOkButton = DialogOkButton;
    this.bottomAddAnimals = bottomAddAnimals;
    this.checkoutBack = checkoutBack;
    this.checkoutGO = checkoutGO;
    this.rectangleFurther = rectangleFurther;
    this.rectangleGray = rectangleGray;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCustomDatePickerDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCustomDatePickerDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_custom_date_picker_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCustomDatePickerDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.DialogCancelButton;
      ConstraintLayout DialogCancelButton = ViewBindings.findChildViewById(rootView, id);
      if (DialogCancelButton == null) {
        break missingId;
      }

      id = R.id.DialogDatePicker;
      DatePicker DialogDatePicker = ViewBindings.findChildViewById(rootView, id);
      if (DialogDatePicker == null) {
        break missingId;
      }

      id = R.id.DialogOkButton;
      ConstraintLayout DialogOkButton = ViewBindings.findChildViewById(rootView, id);
      if (DialogOkButton == null) {
        break missingId;
      }

      id = R.id.bottomAddAnimals;
      ConstraintLayout bottomAddAnimals = ViewBindings.findChildViewById(rootView, id);
      if (bottomAddAnimals == null) {
        break missingId;
      }

      id = R.id.checkoutBack;
      TextView checkoutBack = ViewBindings.findChildViewById(rootView, id);
      if (checkoutBack == null) {
        break missingId;
      }

      id = R.id.checkoutGO;
      TextView checkoutGO = ViewBindings.findChildViewById(rootView, id);
      if (checkoutGO == null) {
        break missingId;
      }

      id = R.id.rectangleFurther;
      View rectangleFurther = ViewBindings.findChildViewById(rootView, id);
      if (rectangleFurther == null) {
        break missingId;
      }

      id = R.id.rectangleGray;
      View rectangleGray = ViewBindings.findChildViewById(rootView, id);
      if (rectangleGray == null) {
        break missingId;
      }

      return new ActivityCustomDatePickerDialogBinding((ConstraintLayout) rootView,
          DialogCancelButton, DialogDatePicker, DialogOkButton, bottomAddAnimals, checkoutBack,
          checkoutGO, rectangleFurther, rectangleGray);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
