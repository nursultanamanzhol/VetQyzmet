// Generated by view binder compiler. Do not edit!
package kz.cifron.vetqyzmet_doctor.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import kz.cifron.vetqyzmet_doctor.R;

public final class ActivityAddAnimalsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout TopFont;

  @NonNull
  public final ConstraintLayout addAnimals;

  @NonNull
  public final ImageView arrowIcon;

  @NonNull
  public final ConstraintLayout backBtn;

  @NonNull
  public final ConstraintLayout birthDateLayout;

  @NonNull
  public final TextView birthDateText;

  @NonNull
  public final TextView birthMonth;

  @NonNull
  public final ConstraintLayout bottomAddAnimals;

  @NonNull
  public final ConstraintLayout breedConst;

  @NonNull
  public final TextView breedText;

  @NonNull
  public final TextView chageText;

  @NonNull
  public final TextView checkoutBack;

  @NonNull
  public final TextView checkoutGO;

  @NonNull
  public final ConstraintLayout chooseDateButton;

  @NonNull
  public final ConstraintLayout colorConst;

  @NonNull
  public final TextView colorText;

  @NonNull
  public final TextInputLayout emailEt;

  @NonNull
  public final TextInputEditText emailEt1;

  @NonNull
  public final RadioButton female;

  @NonNull
  public final RadioGroup genderAnimal;

  @NonNull
  public final TextView genderText;

  @NonNull
  public final ConstraintLayout goonBtn;

  @NonNull
  public final ImageView imageDateButton;

  @NonNull
  public final RadioButton male;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final View rectangleFurther;

  @NonNull
  public final View rectangleGray;

  @NonNull
  public final TextView saveBreed;

  @NonNull
  public final TextView saveColor;

  @NonNull
  public final TextView saveType;

  @NonNull
  public final View separatorTop;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView typeInj;

  @NonNull
  public final ConstraintLayout typeInjConst;

  @NonNull
  public final ConstraintLayout typeconst;

  private ActivityAddAnimalsBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout TopFont, @NonNull ConstraintLayout addAnimals,
      @NonNull ImageView arrowIcon, @NonNull ConstraintLayout backBtn,
      @NonNull ConstraintLayout birthDateLayout, @NonNull TextView birthDateText,
      @NonNull TextView birthMonth, @NonNull ConstraintLayout bottomAddAnimals,
      @NonNull ConstraintLayout breedConst, @NonNull TextView breedText,
      @NonNull TextView chageText, @NonNull TextView checkoutBack, @NonNull TextView checkoutGO,
      @NonNull ConstraintLayout chooseDateButton, @NonNull ConstraintLayout colorConst,
      @NonNull TextView colorText, @NonNull TextInputLayout emailEt,
      @NonNull TextInputEditText emailEt1, @NonNull RadioButton female,
      @NonNull RadioGroup genderAnimal, @NonNull TextView genderText,
      @NonNull ConstraintLayout goonBtn, @NonNull ImageView imageDateButton,
      @NonNull RadioButton male, @NonNull ProgressBar progressBar, @NonNull View rectangleFurther,
      @NonNull View rectangleGray, @NonNull TextView saveBreed, @NonNull TextView saveColor,
      @NonNull TextView saveType, @NonNull View separatorTop, @NonNull TextView textView,
      @NonNull TextView typeInj, @NonNull ConstraintLayout typeInjConst,
      @NonNull ConstraintLayout typeconst) {
    this.rootView = rootView;
    this.TopFont = TopFont;
    this.addAnimals = addAnimals;
    this.arrowIcon = arrowIcon;
    this.backBtn = backBtn;
    this.birthDateLayout = birthDateLayout;
    this.birthDateText = birthDateText;
    this.birthMonth = birthMonth;
    this.bottomAddAnimals = bottomAddAnimals;
    this.breedConst = breedConst;
    this.breedText = breedText;
    this.chageText = chageText;
    this.checkoutBack = checkoutBack;
    this.checkoutGO = checkoutGO;
    this.chooseDateButton = chooseDateButton;
    this.colorConst = colorConst;
    this.colorText = colorText;
    this.emailEt = emailEt;
    this.emailEt1 = emailEt1;
    this.female = female;
    this.genderAnimal = genderAnimal;
    this.genderText = genderText;
    this.goonBtn = goonBtn;
    this.imageDateButton = imageDateButton;
    this.male = male;
    this.progressBar = progressBar;
    this.rectangleFurther = rectangleFurther;
    this.rectangleGray = rectangleGray;
    this.saveBreed = saveBreed;
    this.saveColor = saveColor;
    this.saveType = saveType;
    this.separatorTop = separatorTop;
    this.textView = textView;
    this.typeInj = typeInj;
    this.typeInjConst = typeInjConst;
    this.typeconst = typeconst;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddAnimalsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddAnimalsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_animals, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddAnimalsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.TopFont;
      ConstraintLayout TopFont = ViewBindings.findChildViewById(rootView, id);
      if (TopFont == null) {
        break missingId;
      }

      id = R.id.addAnimals;
      ConstraintLayout addAnimals = ViewBindings.findChildViewById(rootView, id);
      if (addAnimals == null) {
        break missingId;
      }

      id = R.id.arrow_icon;
      ImageView arrowIcon = ViewBindings.findChildViewById(rootView, id);
      if (arrowIcon == null) {
        break missingId;
      }

      id = R.id.backBtn;
      ConstraintLayout backBtn = ViewBindings.findChildViewById(rootView, id);
      if (backBtn == null) {
        break missingId;
      }

      id = R.id.birthDateLayout;
      ConstraintLayout birthDateLayout = ViewBindings.findChildViewById(rootView, id);
      if (birthDateLayout == null) {
        break missingId;
      }

      id = R.id.birthDateText;
      TextView birthDateText = ViewBindings.findChildViewById(rootView, id);
      if (birthDateText == null) {
        break missingId;
      }

      id = R.id.birthMonth;
      TextView birthMonth = ViewBindings.findChildViewById(rootView, id);
      if (birthMonth == null) {
        break missingId;
      }

      id = R.id.bottomAddAnimals;
      ConstraintLayout bottomAddAnimals = ViewBindings.findChildViewById(rootView, id);
      if (bottomAddAnimals == null) {
        break missingId;
      }

      id = R.id.breedConst;
      ConstraintLayout breedConst = ViewBindings.findChildViewById(rootView, id);
      if (breedConst == null) {
        break missingId;
      }

      id = R.id.breedText;
      TextView breedText = ViewBindings.findChildViewById(rootView, id);
      if (breedText == null) {
        break missingId;
      }

      id = R.id.chageText;
      TextView chageText = ViewBindings.findChildViewById(rootView, id);
      if (chageText == null) {
        break missingId;
      }

      id = R.id.checkoutBack;
      TextView checkoutBack = ViewBindings.findChildViewById(rootView, id);
      if (checkoutBack == null) {
        break missingId;
      }

      id = R.id.checkoutGO;
      TextView checkoutGO = ViewBindings.findChildViewById(rootView, id);
      if (checkoutGO == null) {
        break missingId;
      }

      id = R.id.chooseDateButton;
      ConstraintLayout chooseDateButton = ViewBindings.findChildViewById(rootView, id);
      if (chooseDateButton == null) {
        break missingId;
      }

      id = R.id.colorConst;
      ConstraintLayout colorConst = ViewBindings.findChildViewById(rootView, id);
      if (colorConst == null) {
        break missingId;
      }

      id = R.id.colorText;
      TextView colorText = ViewBindings.findChildViewById(rootView, id);
      if (colorText == null) {
        break missingId;
      }

      id = R.id.emailEt;
      TextInputLayout emailEt = ViewBindings.findChildViewById(rootView, id);
      if (emailEt == null) {
        break missingId;
      }

      id = R.id.emailEt1;
      TextInputEditText emailEt1 = ViewBindings.findChildViewById(rootView, id);
      if (emailEt1 == null) {
        break missingId;
      }

      id = R.id.female;
      RadioButton female = ViewBindings.findChildViewById(rootView, id);
      if (female == null) {
        break missingId;
      }

      id = R.id.genderAnimal;
      RadioGroup genderAnimal = ViewBindings.findChildViewById(rootView, id);
      if (genderAnimal == null) {
        break missingId;
      }

      id = R.id.genderText;
      TextView genderText = ViewBindings.findChildViewById(rootView, id);
      if (genderText == null) {
        break missingId;
      }

      id = R.id.goonBtn;
      ConstraintLayout goonBtn = ViewBindings.findChildViewById(rootView, id);
      if (goonBtn == null) {
        break missingId;
      }

      id = R.id.imageDateButton;
      ImageView imageDateButton = ViewBindings.findChildViewById(rootView, id);
      if (imageDateButton == null) {
        break missingId;
      }

      id = R.id.male;
      RadioButton male = ViewBindings.findChildViewById(rootView, id);
      if (male == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.rectangleFurther;
      View rectangleFurther = ViewBindings.findChildViewById(rootView, id);
      if (rectangleFurther == null) {
        break missingId;
      }

      id = R.id.rectangleGray;
      View rectangleGray = ViewBindings.findChildViewById(rootView, id);
      if (rectangleGray == null) {
        break missingId;
      }

      id = R.id.saveBreed;
      TextView saveBreed = ViewBindings.findChildViewById(rootView, id);
      if (saveBreed == null) {
        break missingId;
      }

      id = R.id.saveColor;
      TextView saveColor = ViewBindings.findChildViewById(rootView, id);
      if (saveColor == null) {
        break missingId;
      }

      id = R.id.saveType;
      TextView saveType = ViewBindings.findChildViewById(rootView, id);
      if (saveType == null) {
        break missingId;
      }

      id = R.id.separatorTop;
      View separatorTop = ViewBindings.findChildViewById(rootView, id);
      if (separatorTop == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.typeInj;
      TextView typeInj = ViewBindings.findChildViewById(rootView, id);
      if (typeInj == null) {
        break missingId;
      }

      id = R.id.typeInjConst;
      ConstraintLayout typeInjConst = ViewBindings.findChildViewById(rootView, id);
      if (typeInjConst == null) {
        break missingId;
      }

      id = R.id.typeconst;
      ConstraintLayout typeconst = ViewBindings.findChildViewById(rootView, id);
      if (typeconst == null) {
        break missingId;
      }

      return new ActivityAddAnimalsBinding((ConstraintLayout) rootView, TopFont, addAnimals,
          arrowIcon, backBtn, birthDateLayout, birthDateText, birthMonth, bottomAddAnimals,
          breedConst, breedText, chageText, checkoutBack, checkoutGO, chooseDateButton, colorConst,
          colorText, emailEt, emailEt1, female, genderAnimal, genderText, goonBtn, imageDateButton,
          male, progressBar, rectangleFurther, rectangleGray, saveBreed, saveColor, saveType,
          separatorTop, textView, typeInj, typeInjConst, typeconst);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
